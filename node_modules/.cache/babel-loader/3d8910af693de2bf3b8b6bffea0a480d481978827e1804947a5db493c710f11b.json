{"ast":null,"code":"import React,{useEffect,useRef}from'react';import{useLocation}from'react-router-dom';import Header from'../General/header';/* Styling */import'./experience.css';/* Generic Component */import Cursor from'../General/cursor';/* Webpage Specific Components */import HeroMessage from'./hero-message';import Experience from'./experience-container';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";function ExperiencePage(){const experienceRef=useRef(null);const contactRef=useRef(null);const location=useLocation();// Get location (including hash)\n// Scroll to the contact section when the hash changes or when the page first loads\nuseEffect(()=>{if(location.hash==='#contact'&&contactRef.current){contactRef.current.scrollIntoView({behavior:'smooth'});}},[location]);// Run this effect whenever the location (including hash) changes\nreturn/*#__PURE__*/_jsxs(\"div\",{className:\"full-main flex\",children:[/*#__PURE__*/_jsx(Header,{style:{position:'relative'}}),/*#__PURE__*/_jsxs(\"div\",{className:\"main-content\",children:[/*#__PURE__*/_jsx(HeroMessage,{}),/*#__PURE__*/_jsx(Experience,{experienceRef:experienceRef,contactRef:contactRef}),/*#__PURE__*/_jsx(Cursor,{})]})]});}export default ExperiencePage;","map":{"version":3,"names":["React","useEffect","useRef","useLocation","Header","Cursor","HeroMessage","Experience","jsx","_jsx","jsxs","_jsxs","ExperiencePage","experienceRef","contactRef","location","hash","current","scrollIntoView","behavior","className","children","style","position"],"sources":["/home/myxubuntuos/repos/PersonalWebsite/src/Experience/experience.js"],"sourcesContent":["import React, { useEffect, useRef } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport Header from '../General/header'\n\n/* Styling */\nimport './experience.css';\n\n/* Generic Component */\nimport Cursor from '../General/cursor';\n\n/* Webpage Specific Components */ \nimport HeroMessage from './hero-message';\nimport Experience from './experience-container';\n\nfunction ExperiencePage () {\n    const experienceRef = useRef(null);\n    const contactRef = useRef(null);\n    const location = useLocation(); // Get location (including hash)\n\n    // Scroll to the contact section when the hash changes or when the page first loads\n    useEffect(() => {\n        if (location.hash === '#contact' && contactRef.current) {\n            contactRef.current.scrollIntoView({ behavior: 'smooth' });\n        }\n    }, [location]); // Run this effect whenever the location (including hash) changes\n\n    return (\n        <div className = \"full-main flex\">\n            <Header style= {{position: 'relative'}}/>\n            <div className=\"main-content\">\n                <HeroMessage />\n                <Experience experienceRef={experienceRef} contactRef={contactRef} />\n                <Cursor />\n            </div>\n        </div>\n    );\n}\n\nexport default ExperiencePage;"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,SAAS,CAAEC,MAAM,KAAQ,OAAO,CAChD,OAASC,WAAW,KAAQ,kBAAkB,CAC9C,MAAO,CAAAC,MAAM,KAAM,mBAAmB,CAEtC,aACA,MAAO,kBAAkB,CAEzB,uBACA,MAAO,CAAAC,MAAM,KAAM,mBAAmB,CAEtC,iCACA,MAAO,CAAAC,WAAW,KAAM,gBAAgB,CACxC,MAAO,CAAAC,UAAU,KAAM,wBAAwB,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAEhD,QAAS,CAAAC,cAAcA,CAAA,CAAI,CACvB,KAAM,CAAAC,aAAa,CAAGX,MAAM,CAAC,IAAI,CAAC,CAClC,KAAM,CAAAY,UAAU,CAAGZ,MAAM,CAAC,IAAI,CAAC,CAC/B,KAAM,CAAAa,QAAQ,CAAGZ,WAAW,CAAC,CAAC,CAAE;AAEhC;AACAF,SAAS,CAAC,IAAM,CACZ,GAAIc,QAAQ,CAACC,IAAI,GAAK,UAAU,EAAIF,UAAU,CAACG,OAAO,CAAE,CACpDH,UAAU,CAACG,OAAO,CAACC,cAAc,CAAC,CAAEC,QAAQ,CAAE,QAAS,CAAC,CAAC,CAC7D,CACJ,CAAC,CAAE,CAACJ,QAAQ,CAAC,CAAC,CAAE;AAEhB,mBACIJ,KAAA,QAAKS,SAAS,CAAG,gBAAgB,CAAAC,QAAA,eAC7BZ,IAAA,CAACL,MAAM,EAACkB,KAAK,CAAG,CAACC,QAAQ,CAAE,UAAU,CAAE,CAAC,CAAC,cACzCZ,KAAA,QAAKS,SAAS,CAAC,cAAc,CAAAC,QAAA,eACzBZ,IAAA,CAACH,WAAW,GAAE,CAAC,cACfG,IAAA,CAACF,UAAU,EAACM,aAAa,CAAEA,aAAc,CAACC,UAAU,CAAEA,UAAW,CAAE,CAAC,cACpEL,IAAA,CAACJ,MAAM,GAAE,CAAC,EACT,CAAC,EACL,CAAC,CAEd,CAEA,cAAe,CAAAO,cAAc","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}